#!/usr/bin/env tern

import solutions.Fetch;

const g = Fetch.get(8)
   .reader()
   .readLines();

const brd = (2 * g.length + 2 * g[0].length)-4;
const pts = {:};

for(r in 1 to g.length -2){
 let m1 = g[r][0];
 let m2 = g[r][g[r].length - 1];
 
 for(i in 1 to g[r].length -2){
   const c1 = i;
   const c2 = (g[r].length - 1) - i;
   
   if(g[r][c1] > m1) {
      m1 = g[r][c1];
      pts[[r,c1]] = 1;
   }
   if(g[r][c2] > m2) {
      m2 = g[r][c2];
      pts[[r,c2]] = 1;
   }
 }
}

for(c in 1 to g[0].length - 2){
 let m1 = g[0][c];
 let m2 = g[g.length - 1][c];
 
 for(i in 1 to g.length -2){
   const r1 = i;
   const r2 = (g.length - 1) - i;
   
   if(g[r1][c] > m1) {
      m1 = g[r1][c];
      pts[[r1,c]] = 1;
   }
   if(g[r2][c] > m2) {
      m2 = g[r2][c];
      pts[[r2,c]] = 1;
   }
 }
}

println(pts.size + brd);



